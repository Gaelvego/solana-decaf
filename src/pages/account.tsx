import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import { withRedirects } from "~/server/api/firebase/withRedirects";
import { api } from "~/utils/api";
import { signOut, useAuthUser } from "~/utils/firebase/auth";
import usdcToSol from "~/utils/usdcToSol";
import Transactions from "~/components/transactions/Transactions";

interface AccountProps {
  children?: React.ReactNode;
}

export const USDollar = new Intl.NumberFormat("en-US", {
  style: "currency",
  currency: "USD",
});

const Account: NextPage<AccountProps> = () => {
  const [loading, user] = useAuthUser();
  const router = useRouter();

  const { data: balanceData } = api.example.getBalance.useQuery({
    publicKey: user?.publicKey,
  });

  if (loading || !user) return <div>Loading...</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="min-h-screen">
        <div className="min-h-screen w-full bg-white p-8">
          <div className="rounded-2xl bg-gradient-to-r from-[#5AA9FF] to-[#5DF1B3]/60">
            <div className="flex w-full flex-col space-y-8 bg-white/30 px-6 py-6">
              <div className="flex justify-between">
                <div className="flex items-center space-x-4">
                  {/* Profile */}
                  <picture>
                    <img
                      src={user.photoURL}
                      alt={`${user.displayName || ""} Profile Picture`}
                      className="h-16 w-16 rounded-full"
                    />
                  </picture>
                  <h2 className="text-lg">
                    Welcome back! <br />
                    {user.displayName.split(" ")[0]}
                  </h2>
                </div>
                <div>
                  <button
                    className="flex items-center justify-center space-x-2"
                    onClick={() => {
                      void signOut({
                        onSuccess: () => {
                          router.reload();
                        },
                      });
                    }}
                  >
                    <span>log out</span>
                    <svg
                      width="20"
                      height="57"
                      viewBox="0 0 54 57"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M10.125 49.875C9.225 49.875 8.4375 49.5187 7.7625 48.8062C7.0875 48.0937 6.75 47.2625 6.75 46.3125V10.6875C6.75 9.7375 7.0875 8.90625 7.7625 8.19375C8.4375 7.48125 9.225 7.125 10.125 7.125H26.4937V10.6875H10.125V46.3125H26.4937V49.875H10.125ZM37.4625 38.8906L35.0437 36.3375L40.7812 30.2812H21.0937V26.7187H40.6687L34.9312 20.6625L37.35 18.1094L47.25 28.5594L37.4625 38.8906Z"
                        fill="#002940"
                      />
                    </svg>
                  </button>
                </div>
              </div>

              <div>
                <button className="w-full transform rounded-full bg-[#FFF7F7] px-6 py-3 transition-all hover:scale-105 active:scale-95">
                  Edit your information
                </button>
              </div>

              <div>
                <p className="text-lg">your total balance is:</p>
                {balanceData && (
                  <p className="pb-4 text-3xl">
                    {USDollar.format(
                      usdcToSol({
                        amount: balanceData.balance || 0,
                        currency: "SOL",
                      })
                    )}{" "}
                    USDC
                  </p>
                )}
              </div>
            </div>
          </div>

          <div>
            <h2 className="pb-4 pt-8 text-2xl font-medium text-prussian-blue">
              Latest transactions
            </h2>
            <div className="rounded-2xl bg-gradient-to-br from-[#79D6F4] to-[#70DEE0] p-4">
              {" "}
              {user && <Transactions user={user} />}
            </div>
          </div>

          <div className="fixed bottom-0 right-0 flex w-full justify-around bg-white py-4">
            <Link href="/">
              <Image src="home.svg" width={60} height={200} alt="Logo" />
            </Link>
            <Link href="/account">
              <Image src="account.svg" width={60} height={200} alt="Logo" />
            </Link>
            <Link href="/contacts">
              <Image src="contacts.svg" width={60} height={200} alt="Logo" />
            </Link>
          </div>
        </div>
      </div>
    </>
  );
};

export const getServerSideProps = withRedirects({
  onAuthFailure: () => ({ destination: "/login", permanent: false }),
  onAuthSuccess: ({ user }) => {
    return user.publicKey
      ? undefined
      : { destination: "/wallet", permanent: false };
  },
});

export default Account;
