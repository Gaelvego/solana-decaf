import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import { withRedirects } from "~/server/api/firebase/withRedirects";
import { signOut } from "~/utils/firebase/auth";

interface AccountProps {
  children?: React.ReactNode;
}

const Account: NextPage<AccountProps> = () => {
  // eslint-disable-next-line @typescript-eslint/unbound-method
  // const { disconnect } = useWallet();
  const router = useRouter();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className="min-h-screen"
        style={{
          backgroundColor: "#5df1b3",
          backgroundImage:
            "linear-gradient(55deg, #5df1b3 0%, #5df1b3 22%, #6cbefe 49%, #008fff 75%)",
        }}
      >
        <div className="min-h-screen w-full bg-white/[0.35]">
          <h1>Hola</h1>
          <button
            onClick={() => {
              void signOut({
                onSuccess: () => {
                  // await disconnect();
                  router.reload();
                },
              });
            }}
          >
            Cerrar Sesion
          </button>
          <div className="fixed bottom-0 flex w-full justify-around bg-white py-4">
            <Link href="/">
              <Image src="home.svg" width={60} height={200} alt="Logo" />
            </Link>
            <Link href="/account">
              <Image src="account.svg" width={60} height={200} alt="Logo" />
            </Link>
            <Link href="/contacts">
              <Image src="contacts.svg" width={60} height={200} alt="Logo" />
            </Link>
          </div>
        </div>
      </div>
    </>
  );
};

export const getServerSideProps = withRedirects({
  onAuthFailure: () => ({ destination: "/login", permanent: false }),
  onAuthSuccess: ({ user }) => {
    return user.publicKey
      ? undefined
      : { destination: "/wallet", permanent: false };
  },
});

export default Account;
